df |>
filter(bvd_sector %in% industry_var_levels$bvd_sector) |>
mutate(
bvd_sector=factor(bvd_sector, levels=industry_var_levels$bvd_sector),
bvd_sector = fct_relabel(bvd_sector, ~str_wrap(., width = 40))
) |>
ggplot(aes(y=Value,x=bvd_sector)) +
facet_wrap(vars(Exposure), nrow=1, scales = "free_x") +
geom_boxplot(fill="darkgrey"
,na.rm = TRUE
, outlier.alpha = .075
, varwidth = TRUE
) +
coord_flip() +
theme_bw() +
labs(y = "Distribution of Exposure Variables", x = "") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
text = element_text(size = 12))
ggsave("../results/Figures/descriptives/within_industry_variances_TOP15_boxplot.pdf", width=10, height=8)
# # calculate average climate change exposure by firm
# firm_mean <- df |>
#   group_by(isin) |>
#   summarise(ccexp = mean(ccexp, na.rm=T)) |>
#   left_join(df |> select(isin,sic),
#             by = "isin") |>
#   left_join(sic_desc, by = "sic") |>
#   filter(!is.na(industry))
#
# # Calculate variance within each industry
# sic_var <- firm_mean |>
#   # group by industry
#   group_by(industry) |>
#   # get variance for each industry
#   summarise(sic_var=var(ccexp,na.rm=T)) |>
#   # delete all industries with NAs
#   filter(!is.na(industry)) |>
#   # round
#   mutate(sic_var = round(sic_var, digits = 2)) |>
#   arrange(sic_var)
#
# # Only those industries with more than 50 firms
# sic_ct <- firm_mean |>
#   count(sic) #|>
#   filter(n>50)
#
# # plot
# within_industry_variance <- firm_mean |>
#   filter(sic %in% sic_ct$sic) |>
#   mutate(industry=factor(industry, levels=sic_var$industry)) |>
#   ggplot(aes(x=industry, y=ccexp)) +
#   # geom_jitter(alpha=0.1) +
#   geom_boxplot(fill="red", outlier.alpha = .075) +
#   theme_bw() +
#   theme(
#     legend.position="none",
#     plot.title = element_text(size=11)
#   ) +
#   labs(x = "", y = "Climate Change Exposure") +
#   coord_flip()
#
# # save
# ggsave("../results/Figures/descriptives/within_industry_variance.pdf", within_industry_variance, width=11, height=8.5)
#
#
# # Variances over all exposure measures ------------------------------------
#
# # get averages for all four exposure variables for each firm
# firm_means <- df |>
#   group_by(isin) |>
#   summarise(across(c(opexpo,rgexpo,phexpo), ~ mean(.x, na.rm=T))) |>
#   left_join(df |> select(isin,sic),
#             by = "isin") |>
#   left_join(sic_desc, by = "sic") |>
#   filter(!is.na(industry))
#
# # calculate variance for each variable within industries
# exposure_var <- firm_means |>
#   group_by(industry) |>
#   summarise(across(opexpo:phexpo, ~ var(.x, na.rm = TRUE))) |>
#   mutate(avg_var = rowMeans(across(opexpo:phexpo))) |>
#   arrange(-avg_var)
#
# # Only top 15 variance industries
# sic_ct <- exposure_var |>
#   arrange(-avg_var) |>
#   head(15)
#
# # Plot
# firm_means |>
#   filter(industry %in% sic_ct$industry) |>
#   mutate(industry=factor(industry, levels=sic_var$industry)) |>
#   pivot_longer(cols = 2:4, names_to = "Exposure", values_to = "value") |>
#   mutate(Variable = recode(Exposure,
#                            opexpo = "Opportunity",
#                            phexpo = "Physical",
#                            rgexpo = "Regulatory"),
#          round = round(value,digits = 2)) |>
#   ggplot(aes(y=value,x=industry)) +
#   facet_wrap(vars(Variable), nrow=1, scales = "free_x") +
#   # geom_violin() +
#   geom_boxplot(fill="darkgreen", outlier.alpha = .075) +
#   coord_flip() +
#   # viridis::scale_color_viridis(discrete = T,end = .9) +
#   # scale_shape_manual(values=c(15:18)) +
#   theme_bw() +
#   labs(y="Variance",x = "") +
#   theme(legend.position = "bottom",
#         axis.text.x=element_text(angle = 35, vjust=0.95,hjust=1))
#
# # save
# ggsave("../results/Figures/descriptives/within_industry_variances.pdf", within_industry_variances, width=11, height=8.5)
#
# ###
#
# # top 10 only
#
# # Plot
# within_industry_variances <- exposure_var |>
#   filter(industry %in% sic_ct$industry) |>
#   mutate(industry=factor(industry, levels=sic_var$industry)) |>
#   pivot_longer(cols = 2:6, names_to = "Variable", values_to = "value") |>
#   mutate(Variable = recode(Variable,
#                            opexpo = "Opportunity",
#                            phexpo = "Physical",
#                            rgexpo = "Regulatory"),
#          round = round(value,digits = 2)) |>
#   filter(!Variable %in% c("avg_var", "ccexp")) |>
#   group_by(industry) |>
#   mutate(sumv=sum(value)) |>
#   ungroup() |>
#   arrange(desc(sumv)) |>
#   head(30) |>
#   ggplot(aes(y=value,x=industry)) +
#   facet_wrap(vars(Variable), nrow=1, scales = "free_x") +
#   geom_point(size=3) +
#   coord_flip() +
#   viridis::scale_color_viridis(discrete = T,end = .9) +
#   scale_shape_manual(values=c(15:18)) +
#   theme_bw() +
#   labs(y="Variance",x = "") +
#   theme(legend.position = "bottom",
#         axis.text.x=element_text(angle = 35, vjust=0.95,hjust=1))
#
# ggsave("../results/Figures/descriptives/within_industry_variances_TOP10.pdf", within_industry_variances, width=11, height=8.5)
# End
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("/Users/vincentheddesheimer/Dropbox (Princeton)/BBH/BBH1/data/")}
pacman::p_load(fastLink, tidyverse)
rm(list = ls())
## load annual exposure data
exposurey <- read.csv("01_raw/exposure/cc_firmyear_2021Q4_03082021_OSF.csv", stringsAsFactors = F)
exposure_cs <- exposurey[, c("gvkey", "isin", "hqcountrycode")]
exposure_cs <- exposure_cs[!duplicated(exposure_cs) , ]
## drop cases in which the gvkey OR isin is duplicated, and they are NOT NA.
## duplication implies that a single isin code corresponds to multiple gvkey/bvdids.
## keeping these would mean that we are using a single row of Orbis firm data for
## MULTIPLE lobbyview rows. Might keep these for robustness check later, but drop now for main (~600 rows).
## (aside: we want to keep cases if ONE is NA, because we might still be able to match on the OTHER)
duplicate_gvkey <- (duplicated(exposure_cs$gvkey) | duplicated(exposure_cs$gvkey, fromLast=T)) & !is.na(exposure_cs$gvkey)
if(Sys.info()["user"]=="christianbaehr" ) {setwd("/Users/christianbaehr/Dropbox/BBH/BBH1/data")}
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("/Users/vincentheddesheimer/Dropbox (Princeton)/BBH/BBH1/data/")}
pacman::p_load(fastLink, tidyverse)
rm(list = ls())
## load annual exposure data
exposurey <- read.csv("01_raw/exposure/cc_firmyear_2021Q4_03082021_OSF.csv", stringsAsFactors = F)
## drop firms without a one-to-one mapping from gvkey to isin
#exposurey <- exposurey[which( !((duplicated(exposurey[, c("gvkey", "year")]) | duplicated(exposurey[, c("gvkey", "year")], fromLast=T)) & !is.na(exposurey$gvkey)) ), ]
exposure_cs <- exposurey[, c("gvkey", "isin", "hqcountrycode")]
exposure_cs <- exposure_cs[!duplicated(exposure_cs) , ]
## drop cases in which the gvkey OR isin is duplicated, and they are NOT NA.
## duplication implies that a single isin code corresponds to multiple gvkey/bvdids.
## keeping these would mean that we are using a single row of Orbis firm data for
## MULTIPLE lobbyview rows. Might keep these for robustness check later, but drop now for main (~600 rows).
## (aside: we want to keep cases if ONE is NA, because we might still be able to match on the OTHER)
duplicate_gvkey <- (duplicated(exposure_cs$gvkey) | duplicated(exposure_cs$gvkey, fromLast=T)) & !is.na(exposure_cs$gvkey)
duplicate_isin <- (duplicated(exposure_cs$isin) | duplicated(exposure_cs$isin, fromLast=T)) & !is.na(exposure_cs$isin)
exposure_cs <- exposure_cs[!(duplicate_gvkey | duplicate_isin), ]
exposure_cs <- exposurey[, c("gvkey", "isin", "hqcountrycode")]
exposure_cs <- exposure_cs[!duplicated(exposure_cs) , ]
if(Sys.info()["user"]=="christianbaehr" ) {setwd("/Users/christianbaehr/Dropbox/BBH/BBH1/data")}
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("/Users/vincentheddesheimer/Dropbox (Princeton)/BBH/BBH1/data/")}
pacman::p_load(fastLink, tidyverse)
rm(list = ls())
## load annual exposure data
exposurey <- read.csv("01_raw/exposure/cc_firmyear_2021Q4_03082021_OSF.csv", stringsAsFactors = F)
## drop firms without a one-to-one mapping from gvkey to isin
#exposurey <- exposurey[which( !((duplicated(exposurey[, c("gvkey", "year")]) | duplicated(exposurey[, c("gvkey", "year")], fromLast=T)) & !is.na(exposurey$gvkey)) ), ]
exposure_cs <- exposurey[, c("gvkey", "isin", "hqcountrycode")]
exposure_cs <- exposure_cs[!duplicated(exposure_cs) , ]
## drop cases in which the gvkey OR isin is duplicated, and they are NOT NA.
## duplication implies that a single isin code corresponds to multiple gvkey/bvdids.
## keeping these would mean that we are using a single row of Orbis firm data for
## MULTIPLE lobbyview rows. Might keep these for robustness check later, but drop now for main (~600 rows).
## (aside: we want to keep cases if ONE is NA, because we might still be able to match on the OTHER)
duplicate_gvkey <- (duplicated(exposure_cs$gvkey) | duplicated(exposure_cs$gvkey, fromLast=T)) & !is.na(exposure_cs$gvkey)
duplicate_isin <- (duplicated(exposure_cs$isin) | duplicated(exposure_cs$isin, fromLast=T)) & !is.na(exposure_cs$isin)
exposure_cs <- exposure_cs[!(duplicate_gvkey | duplicate_isin), ]
## reshape main exposure data from long to wide - we want all the variables, but
## just for the subset of firms we identified above
exposurey <- exposurey[, !names(exposurey) %in% c("gvkey", "hqcountrycode")] # omitting gvkey and hq code so they arent repeated
exposurey_wide <- reshape(exposurey, idvar = "isin", timevar = "year", direction = "wide", sep = "_")
exposurey_wide <- merge(exposurey_wide, exposure_cs) # only keep firms with isin in exposure_cs (legit candidates)
rm(list = setdiff(ls(), "exposurey_wide")) # exposurey_wide all we need to keep from above
## read in orbis firm covariate data
orbis <- read.csv("02_processed/orbis_11_05_2023.csv", stringsAsFactors = F)
View(orbis)
View(exposurey_wide)
orbis <- orbis[!is.na(orbis$isin), ] # since merging with sautner on isin, no need for NA isin rows
## merge orbis with
exposure_orbis_wide <- merge(exposurey_wide, orbis, by="isin")
rm(list = setdiff(ls(), c("exposure_orbis_wide")))
## load in lobbyview
lobby_client <- read.csv("01_raw/lobbyview/dataset___client_level.csv", stringsAsFactors = F)
## convert empty bvdid to NA -
lobby_client$bvdid[which(lobby_client$bvdid=="")] <- NA
## drop lobby rows where both bvdid and gvkey missing - no chance of matching these
## with sautner-orbis
lobby_client <- lobby_client[which(!(is.na(lobby_client$bvdid) & is.na(lobby_client$gvkey))), ]
## load in lobbyview
lobby_client <- read.csv("01_raw/lobbyview/dataset___client_level.csv", stringsAsFactors = F)
## convert empty bvdid to NA -
lobby_client$bvdid[which(lobby_client$bvdid=="")] <- NA
## drop lobby rows where both bvdid and gvkey missing - no chance of matching these
## with sautner-orbis
lobby_client <- lobby_client[which(!(is.na(lobby_client$bvdid) & is.na(lobby_client$gvkey))), ]
## no na bvdids in exposure_orbis_wide - no concerns with merging on this var
sum(is.na(exposure_orbis_wide$bvdid))
sum(exposure_orbis_wide$bvdid=="")
## NA bvdids in lobby_client data could screw up when were merging on that variable.
## replace NAs with "-1", because this value isnt present in lobbyview. So it will render these
## obsolete
## (but we dont want to drop these rows, because the gvkey could still be valuable)
lobby_client$bvdid[is.na(lobby_client$bvdid)] <- "-1"
## same logic for gvkeys
exposure_orbis_wide$gvkey[is.na(exposure_orbis_wide$gvkey)] <- (-1)
exposure_orbis_wide$gvkey[is.na(exposure_orbis_wide$gvkey)] <- (-2) # use different value for NAs - otherwise would match on this
## merge exposure_orbis and lobbyview by bvdid (drop gvkey from lobby to avoid multiple variables with same name)
a <- merge(exposure_orbis_wide, lobby_client[,names(lobby_client)!="gvkey"], by="bvdid")
## merge exposure_orbis and lobbyview by gvkey
b <- merge(exposure_orbis_wide, lobby_client[,names(lobby_client)!="bvdid"], by="gvkey")
## align column names in gvkey matches with those of bvdid matches -> for merging
b <- b[,names(a)]
d <- rbind(a, b) # stack the two datasets together - then drop duplicates
d <- d[!duplicated(d), ]
duplicates <- d[(duplicated(d$bvdid)|duplicated(d$bvdid, fromLast=T)) | (duplicated(d$gvkey)|duplicated(d$gvkey, fromLast=T)), ]
names(duplicates)
duplicates <- duplicates[, c("bvdid", "isin", "cc_expo_ew_2016",
"gvkey", "hqcountrycode", "conm",
"total_assets_usd_2016", "client_uuid", "client_name")]
write.csv(duplicates, "xx_other/exposure_orbis_bvdidORgvkey_duplicated.csv", row.names=F)
d <- d[!(duplicated(d$bvdid)|duplicated(d$bvdid, fromLast=T)), ]## need to OMIT for now those cases which have multiple bvdids to a single isin
d <- d[!(duplicated(d$gvkey)|duplicated(d$gvkey, fromLast=T)), ]## need to OMIT for now those cases which have multiple gvkeys to a single isin
unmatched <- (!exposure_orbis_wide$gvkey %in% d$gvkey) | (!exposure_orbis_wide$bvdid %in% d$bvdid)
e <- exposure_orbis_wide[unmatched, ]
## check if any unmatched cases somehow match perfectly (and arent duplicate throwaways)
sum(e$gvkey %in% lobby_client$gvkey & (!e$gvkey %in% duplicates$gvkey))
sum(e$bvdid %in% lobby_client$bvdid & !is.na(e$bvdid) & (!e$bvdid %in% duplicates$bvdid))
## do number of characters differ?
table(nchar(e$gvkey))
table(nchar(lobby_client$gvkey))
table(nchar(e$bvdid))
table(nchar(lobby_client$bvdid))
class(e$bvdid)
class(lobby_client$bvdid)
sum(substr(lobby_client$bvdid, 1, 2) == "US")
sum(substr(e$bvdid, 1, 2) == "US")
e_us <- e[which(substr(e$bvdid, 1, 2) == "US"), ]
## within us only, number of characters
table(nchar(e_us$bvdid))
table(nchar(lobby_client$bvdid))
## look at random sample of ids
sample(e_us$bvdid, 20)
sample(lobby_client$bvdid, 20)
## check if we just add L suffix to exposure_orbis if it produces matches
sum(paste0(e$bvdid, "L") %in% lobby_client$bvdid & (!e$bvdid %in% duplicates$bvdid))
## the legit matches are stored in d -- rename
exposure_orbis_lobby_wide <- d
duplicate_client_uuid <- duplicated(exposure_orbis_lobby_wide$client_uuid) | duplicated(exposure_orbis_lobby_wide$client_uuid, fromLast=T)
exposure_orbis_lobby_wide <- exposure_orbis_lobby_wide[!duplicate_client_uuid, ]
timespan <- 1999:2023
time_varying <- c("cc_expo_ew_", "cc_risk_ew_", "cc_pos_ew_", "cc_neg_ew_",
"cc_sent_ew_", "op_expo_ew_", "op_risk_ew_", "op_pos_ew_",
"op_neg_ew_", "op_sent_ew_", "rg_expo_ew_", "rg_risk_ew_",
"rg_pos_ew_", "rg_neg_ew_", "rg_sent_ew_", "ph_expo_ew_",
"ph_risk_ew_", "ph_pos_ew_", "ph_neg_ew_", "ph_sent_ew_",
"total_assets_usd_", "n_employees_", "operating_rev_usd_",
"P_L_b4tax_usd_")
moving_list <- lapply(time_varying, function(x) paste0(x, timespan))
moving_list
# adding columns with all missing values where necessary to get balanced
# time-dependent variables (needed for reshape function)
missing_cols <- unlist(moving_list)[!(unlist(moving_list) %in% names(exposure_orbis_lobby_wide))]
exposure_orbis_lobby_wide[, missing_cols] <- NA
## reshape data from wide to long format
exposure_orbis_lobby_long <- reshape(exposure_orbis_lobby_wide,
direction="long",
varying=moving_list,
times=timespan,
timevar="year",
idvar="isin")
names(exposure_orbis_lobby_long) <- gsub("_1999", "", names(exposure_orbis_lobby_long))
View(exposure_orbis_lobby_long)
names(exposure_orbis_lobby_long)
View(exposure_orbis_wide)
names(exposure_orbis_wide)
orbis <- read.csv("02_processed/orbis_11_05_2023.csv", stringsAsFactors = F)
orbis <- orbis[!is.na(orbis$isin), ] # since merging with sautner on isin, no need for NA isin rows
# sum(duplicated(orbis$isin))
View(orbis)
names(orbis)
modelsummary(
models
,stars = c('*' = .1, '**' = .05, '***' = .01)
#,title = 'Main Logit, Year-Industry Effects'
,coef_map = cm
,vcov = ~ year + bvdid
,gof_omit = 'AIC|BIC|Log.Lik|Std.Errors|RMSE'
# ,output = "results/tables/climate_logit_year_COMPARE.tex"
)
rm(list=ls())
# load packages
pacman::p_load(data.table, tidyverse, modelsummary,
marginaleffects, kableExtra, fixest,
janitor, viridis, censReg)
# set working directory
if(Sys.info()["user"]=="fiona" ) {setwd("/Users/fiona/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="christianbaehr" ) {setwd("/Users/christianbaehr/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("~/Dropbox (Princeton)/BBH/BBH1/")}
# load data
df <- fread("data/03_final/lobbying_df_wide_reduced_normal.csv")
df_REV <- fread("data/03_final/lobbying_df_wide_reduced_REVISE_normal.csv")
View(df[, c("year_quarter", "gvkey", "CLI", "CLI_dollars")])
# Specify covariate names
cm <- c("op_expo_ew_y" = "Opportunity Exposure",
"rg_expo_ew_y" = "Regulatory Exposure",
"ph_expo_ew_y" = "Physical Exposure",
"op_expo_ew" = "Opportunity Exposure",
"rg_expo_ew" = "Regulatory Exposure",
"ph_expo_ew" = "Physical Exposure",
"cc_expo_ew_y" = "Overall Exposure",
"cc_expo_ew_q" = "Overall Exposure",
"ebit" = "EBIT",
"I(ebit/at)" = "EBIT/Assets",
"ebit_at" = "EBIT/Assets",
"log_co2_l1" = "Log(Total CO2 Emissions)",
"us_dummy" = "US HQ",
"total_lobby" = "Total Lobbying ($)"
)
# Lobbying Occurrence ------------------------------------------------------
## Overall exposure annual -------------------------------------------------
# models <- list(
#   "(1)" = feglm(CLI ~ cc_expo_ew_y, family = "binomial", df),
#   "(2)" = feglm(CLI ~ cc_expo_ew_y | year, family = "binomial", df),
#   "(3)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) | year, family = "binomial", df),
#   "(4)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year, family = "binomial", df),
#   "(5)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year + industry, family = "binomial", df),
#   "(6)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df),
#   "(7)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year + gvkey, family = "binomial", df)
# )
#
#
# modelsummary(
#   models
#   ,stars = c('*' = .1, '**' = .05, '***' = .01)
#   #,title = 'Effect of Climate Change Attention on Lobbying on Climate Issues'
#   ,coef_map = cm
#   ,vcov = ~ year + gvkey
#   ,gof_omit = 'AIC|BIC|Log.Lik|Std.Errors|RMSE'
#   ,output = "results/tables/climate_logit_year_NEW.tex"
# )
df$bvdid <- df$gvkey_n
sum(is.na(df_REV$CLI))
df_REV$CLI[is.na(df_REV$CLI)] <- 0
df_REV$CLI_dollars[is.na(df_REV$CLI_dollars)] <- 0
models <- list(
"Orig" = feglm(CLI ~ op_expo_ew_y + rg_expo_ew_y + ph_expo_ew_y + I(ebit/at) + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df),
"New" = feglm(CLI ~ op_expo_ew + rg_expo_ew + ph_expo_ew + ebit_at + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df_REV)
)
modelsummary(
models
,stars = c('*' = .1, '**' = .05, '***' = .01)
#,title = 'Main Logit, Year-Industry Effects'
,coef_map = cm
,vcov = ~ year + bvdid
,gof_omit = 'AIC|BIC|Log.Lik|Std.Errors|RMSE'
# ,output = "results/tables/climate_logit_year_COMPARE.tex"
)
rm(list=ls())
# load packages
pacman::p_load(data.table, tidyverse, modelsummary,
marginaleffects, kableExtra, fixest,
janitor, viridis, censReg)
# set working directory
if(Sys.info()["user"]=="fiona" ) {setwd("/Users/fiona/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="christianbaehr" ) {setwd("/Users/christianbaehr/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("~/Dropbox (Princeton)/BBH/BBH1/")}
# load data
df <- fread("data/03_final/lobbying_df_wide_reduced_normal.csv")
df_REV <- fread("data/03_final/lobbying_df_annual_REVISE_normal.csv")
names(df)
df$bvdid <- df$gvkey_n
sum(is.na(df_REV$CLI))
df_REV$CLI[is.na(df_REV$CLI)] <- 0
df_REV$CLI_dollars[is.na(df_REV$CLI_dollars)] <- 0
models <- list(
"Orig" = feglm(CLI ~ op_expo_ew_y + rg_expo_ew_y + ph_expo_ew_y + I(ebit/at) + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df),
"New" = feglm(CLI ~ op_expo_ew + rg_expo_ew + ph_expo_ew + ebit_at + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df_REV)
)
names(df_REV)
rm(list=ls())
# load packages
pacman::p_load(data.table, tidyverse, modelsummary,
marginaleffects, kableExtra, fixest,
janitor, viridis, censReg)
# set working directory
if(Sys.info()["user"]=="fiona" ) {setwd("/Users/fiona/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="christianbaehr" ) {setwd("/Users/christianbaehr/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("~/Dropbox (Princeton)/BBH/BBH1/")}
# load data
df <- fread("data/03_final/lobbying_df_wide_reduced_normal.csv")
df_REV <- fread("data/03_final/lobbying_df_annual_REVISE_normal.csv")
View(df[, c("year_quarter", "gvkey", "CLI", "CLI_dollars")])
neams(df_REV)
names(df_REV)
# Specify covariate names
cm <- c("op_expo_ew_y" = "Opportunity Exposure",
"rg_expo_ew_y" = "Regulatory Exposure",
"ph_expo_ew_y" = "Physical Exposure",
"op_expo_ew" = "Opportunity Exposure",
"rg_expo_ew" = "Regulatory Exposure",
"ph_expo_ew" = "Physical Exposure",
"cc_expo_ew_y" = "Overall Exposure",
"cc_expo_ew_q" = "Overall Exposure",
"ebit" = "EBIT",
"I(ebit/at)" = "EBIT/Assets",
"ebit_at" = "EBIT/Assets",
"log_co2_l1" = "Log(Total CO2 Emissions)",
"us_dummy" = "US HQ",
"total_lobby_annual" = "Total Lobbying ($)"
)
df$bvdid <- df$gvkey_n
sum(is.na(df_REV$CLI))
df_REV$CLI[is.na(df_REV$CLI)] <- 0
df_REV$CLI_dollars[is.na(df_REV$CLI_dollars)] <- 0
models <- list(
"Orig" = feglm(CLI ~ op_expo_ew_y + rg_expo_ew_y + ph_expo_ew_y + I(ebit/at) + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df),
"New" = feglm(CLI ~ op_expo_ew + rg_expo_ew + ph_expo_ew + ebit_at + us_dummy + total_lobby_annual | year + industry + industry_year, family = "binomial", df_REV)
)
table(df_REV$CLI, useNA = "ifany")
rm(list=ls())
# load packages
pacman::p_load(data.table, tidyverse, modelsummary,
marginaleffects, kableExtra, fixest,
janitor, viridis, censReg)
# set working directory
if(Sys.info()["user"]=="fiona" ) {setwd("/Users/fiona/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="christianbaehr" ) {setwd("/Users/christianbaehr/Dropbox/BBH/BBH1/")}
if(Sys.info()["user"]=="vincentheddesheimer" ) {setwd("~/Dropbox (Princeton)/BBH/BBH1/")}
# load data
df <- fread("data/03_final/lobbying_df_wide_reduced_normal.csv")
df_REV <- fread("data/03_final/lobbying_df_annual_REVISE_normal.csv")
# View(df[, c("year_quarter", "gvkey", "CLI", "CLI_dollars")])
# Specify covariate names
cm <- c("op_expo_ew_y" = "Opportunity Exposure",
"rg_expo_ew_y" = "Regulatory Exposure",
"ph_expo_ew_y" = "Physical Exposure",
"op_expo_ew" = "Opportunity Exposure",
"rg_expo_ew" = "Regulatory Exposure",
"ph_expo_ew" = "Physical Exposure",
"cc_expo_ew_y" = "Overall Exposure",
"cc_expo_ew_q" = "Overall Exposure",
"ebit" = "EBIT",
"I(ebit/at)" = "EBIT/Assets",
"ebit_at" = "EBIT/Assets",
"log_co2_l1" = "Log(Total CO2 Emissions)",
"us_dummy" = "US HQ",
"total_lobby_annual" = "Total Lobbying ($)"
)
# Lobbying Occurrence ------------------------------------------------------
## Overall exposure annual -------------------------------------------------
# models <- list(
#   "(1)" = feglm(CLI ~ cc_expo_ew_y, family = "binomial", df),
#   "(2)" = feglm(CLI ~ cc_expo_ew_y | year, family = "binomial", df),
#   "(3)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) | year, family = "binomial", df),
#   "(4)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year, family = "binomial", df),
#   "(5)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year + industry, family = "binomial", df),
#   "(6)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year + industry + industry_year, family = "binomial", df),
#   "(7)" = feglm(CLI ~ cc_expo_ew_y + ebit + I(ebit/at) + us_dummy + total_lobby | year + gvkey, family = "binomial", df)
# )
#
#
# modelsummary(
#   models
#   ,stars = c('*' = .1, '**' = .05, '***' = .01)
#   #,title = 'Effect of Climate Change Attention on Lobbying on Climate Issues'
#   ,coef_map = cm
#   ,vcov = ~ year + gvkey
#   ,gof_omit = 'AIC|BIC|Log.Lik|Std.Errors|RMSE'
#   ,output = "results/tables/climate_logit_year_NEW.tex"
# )
df$bvdid <- df$gvkey_n
sum(is.na(df_REV$CLI))
table(df_REV$CLI, useNA = "ifany")
names(df_REV)
View(df_REV)
head(df_REV$issue_text)
head(df_REV$issue_text, 20)
df_REV |> filter(CLI_annual == TRUE) |> select(issue_text)
df_REV |> filter(CLI_annual == TRUE) |> head(issue_text)
df_REV |> filter(CLI_annual == TRUE) |> select(issue_text) |> head(20)
