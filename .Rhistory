lobbying$amount_num <- as.numeric(lobbying$amount_num)
lobbying_num <- aggregate(lobbying$amount_num, by=list(lobbying$gvkey, lobbying$year, lobbying$report_quarter_code, lobbying$issue_code), FUN=function(x) sum(x, na.rm=T))
names(lobbying_num) <- c("gvkey", "year", "report_quarter_code", "issue_code", "amount_num")
lobbying_text <- aggregate(lobbying[, c("issue_text", "registrant_uuid", "registrant_name", "primary_naics")],
by=list(lobbying$gvkey, lobbying$year, lobbying$report_quarter_code, lobbying$issue_code),
FUN=function(x) paste(x, collapse = "|"))
names(lobbying_text) <- c("gvkey", "year", "report_quarter_code", "issue_code", "issue_text", "registrant_uuid", "registrant_name", "primary_naics")
lobbying <- merge(lobbying_num, lobbying_text)
### there are 21 gvkey duplicates in firm_data
# we will deal with this later
# for now we drop these cases
dupl <- firm_data |>
group_by(gvkey, year, quarter) |>
filter(n()>1) |>
arrange(gvkey, year, quarter) |>
mutate(identifier = paste0(gvkey,"_",year,"_",quarter)) |>
distinct(identifier) |>
pull(identifier)
firm_data_reduced <- firm_data |>
mutate(identifier = paste0(gvkey,"_",year,"_",quarter)) |>
filter(!identifier %in% dupl)
# merge
lobbying$gvkey <- as.numeric(lobbying$gvkey)
df <- lobbying |>
left_join(firm_data_reduced, by = c("gvkey", "year", "report_quarter_code" = "quarter"))
# only observations with climate exposure data
cc <- df |>
filter(!is.na(cc_expo_ew_y))
#numeric year-qtr-gvkey ids to speed indexing
lobbying$gvkey_n <- as.numeric(factor(lobbying$gvkey))
lobbying$unique_id <- as.numeric(paste0(lobbying$year, lobbying$report_quarter_code, lobbying$gvkey_n))
for(i in unique(lobbying$unique_id)) {
temp <- lobbying[which(lobbying$unique_id == i), ]
if (nrow(temp) > 1) {
if( any(temp$amount_num>0) & length(unique(temp$amount_num))==1 ) {
## if all issue codes have exactly the same amounts, assume redundancy
## and distribute the single amount across all issues evenly
temp$amount_num <- temp$amount_num[1] / nrow(temp)
} else if( any(temp$amount_num>0) & sum(temp$amount_num>0)==1 ) {
## if one issue code has a non-zero amount but all other issue codes are
## zero, then distribute the single amount evenly across all issues
temp$amount_num <- sum(temp$amount_num, na.rm=T) / nrow(temp)
} else {
}
## replace existing amount nums with distributed values
lobbying$amount_num[which(lobbying$unique_id == i)] <- temp$amount_num
}
}
## drop text variables that differ across issue codes (screw up the pivot, can solve later if we want)
lobbying <- lobbying[, !names(lobbying) %in% c("issue_text", "registrant_uuid", "registrant_name", "primary_naics")]
lobbying$issue_bin <- 1
lobbying_wide <- pivot_wider(lobbying, names_from = c("issue_code"), values_from=c("issue_bin", "amount_num"), values_fill = 0)
#View(lobbying_wide[duplicated(lobbying_wide[, c("gvkey", "year", "report_quarter_code")]) | duplicated(lobbying_wide[, c("gvkey", "year", "report_quarter_code")], fromLast = T), ])
## maintain existing names for issue code dummies. dont have to rewrite downstream code
names(lobbying_wide) <- gsub("issue_bin_", "", names(lobbying_wide))
# merge with firm_data
df_wide <- lobbying_wide |>
left_join(firm_data_reduced, by = c("gvkey", "year", "report_quarter_code" = "quarter"))
# dummy variable: climate issues
df_wide <- df_wide |>
mutate(CLI = ifelse(ENV == 1 |
CAW == 1 |
ENG == 1 |
FUE == 1,
1,0))
df_wide$CLI_dollars <- apply(df_wide[, c("amount_num_ENV", "amount_num_CAW", "amount_num_ENG", "amount_num_FUE")],
1, function(x) sum(x, na.rm=T) / 1000000)
#US dummy variable
df_wide <- df_wide |>
mutate(us_dummy = ifelse(hqcountrycode == "US",1,0))
#Total annual lobbying (total dollars)
df_wide <- df_wide |>
group_by(gvkey, year) |>
# mutate(total_lobby = n_distinct(report_uuid))
mutate(total_lobby = sum(c_across(grep("amount_num", names(df_wide), value=T))))
df_wide <- df_wide |>
# group by unit (in our case: firm)
group_by(gvkey) |>
# arrange by year
arrange(year) |>
# for one year
mutate(#log_co2_l1 = lag(log_co2, 1),
total_lobby_l1 = lag(total_lobby, 1)) |>
#ungroup
ungroup()
df_wide$industry <- df_wide$bvd_sector
df_wide <- df_wide[which(df_wide$industry!=""), ]
df_wide$industry_year <- paste(df_wide$industry, df_wide$year)
sum(duplicated(df_wide[, c("year", "report_quarter_code", "gvkey")]))
names(df_wide)[names(df_wide)=="assets"] <- "at"
# create year_quarter
df_wide <- df_wide |>
mutate(year_quarter = paste0(year, "_", report_quarter_code))
cc_wide <- df_wide |>
filter(!is.na(cc_expo_ew_y))
# write csv
fwrite(df_wide, file="data/03_final/lobbying_df_wide.csv")
fwrite(cc_wide, file="data/03_final/lobbying_df_wide_reduced.csv")
#Load data
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
## continuous variables in regression models
df_wide_cont_vars <- c("cc_expo_ew_y", "cc_expo_ew_q", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y",
"ebit", "assets", "total_lobby")
## pull from main data
df_wide_cont <- df[, df_wide_cont_vars]
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
view(df$total_lobby)
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
# Load packages
pacman::p_load(tidyverse, data.table, modelsummary)
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
view(df$cc_expo_ew_y)
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df2,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
#Exposure dataset
# load data
df2 <- fread("data/02_processed/exposure_year.csv", colClasses = c("sic"="character"))
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df2,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
view(df2$cc_expo_ew)
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew) + (Opportunity = op_expo_ew) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
view(df$op_expo_ew_y)
#Transform exposure variables *100 for easier interpretation
df <- df |>
mutate(across(c(cc_expo_ew_y, op_expo_ew_y, rg_expo_ew_y, ph_expo_ew_y,), list(~.*100)))
view(df$cc_expo_ew_y)
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 2,
output = 'latex')
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 4,
output = 'latex')
#Transform exposure variables *100 for easier interpretation
df <- df |>
mutate(across(c(cc_expo_ew_y, op_expo_ew_y, rg_expo_ew_y, ph_expo_ew_y,), list(~.*1000)))
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 4,
output = 'latex')
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
view(df$cc_expo_ew_y)
#Transform exposure variables *100 for easier interpretation
df <- df |>
mutate(across(c(cc_expo_ew_y, op_expo_ew_y, rg_expo_ew_y, ph_expo_ew_y,), list(~.*1000)))
view(df$cc_expo_ew_y)
df <- df |>
mutate(across(c(cc_expo_ew_y, op_expo_ew_y, rg_expo_ew_y, ph_expo_ew_y), list(~.*1000)))
view(df$cc_expo_ew_y)
#Transform exposure variables *100 for easier interpretation
# Identify the subset of variables to be multiplied by 100
variables_to_multiply <- c("cc_expo_ew_y", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y")
# Multiply the selected variables by 100
df <- df %>%
mutate(across(all_of(variables_to_multiply), ~ . * 100))
view(df$cc_expo_ew_y)
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 3,
output = 'latex')
##Summary statistics for control variables
datasummary((`Earnings Before Interest and Taxes ($M)` = ebit) + (`Total Assets ($M)` = at) + (`Total Lobbying Per Year($)` = total_lobby) ~ Mean + SD + N,
data = df,
title = 'Control Variables',
align = 'lccccc',
fmt = 2,
output = 'latex')
##Summary statistics for control variables
datasummary((`Earnings Before Interest and Taxes ($M)` = ebit) + (`Total Assets ($M)` = at) + (`Total Lobbying Per Year($)` = total_lobby) ~ Mean + SD + N,
data = df,
title = 'Control Variables',
align = 'lccc',
fmt = 2,
output = 'latex')
##Summary statistics for control variables
datasummary((`Earnings Before Interest and Taxes ($M)` = ebit) + (`Total Assets ($M)` = at) + (`Total Lobbying Per Year($)` = total_lobby) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Control Variables',
align = 'lccccc',
fmt = 2,
output = 'latex')
##Transform financial variables
#Create new variable that is ebit/assets
df$ebit_at <- df$ebit / df$at
# Identify the subset of variables to be divided by 1000000 to show in millions
variables_to_divide <- c("ebit", "ebit_at", "total_lobby")
# Multiply the selected variables by 100
df <- df |>
mutate(across(all_of(variables_to_divide), ~ . / 100))
view(df$total_lobby)
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
##Transform exposure variables *100 for easier interpretation
# Identify the subset of variables to be multiplied by 100
variables_to_multiply <- c("cc_expo_ew_y", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y")
# Multiply the selected variables by 100
df <- df |>
mutate(across(all_of(variables_to_multiply), ~ . * 100))
##Transform financial variables
#Create new variable that is ebit/assets
df$ebit_at <- df$ebit / df$at
# Identify the subset of variables to be divided by 1000000 to show in millions
variables_to_divide <- c("ebit", "ebit_at", "total_lobby")
# Divide the selected variables by 1000000
df <- df |>
mutate(across(all_of(variables_to_divide), ~ . / 1000000))
view(df$total_lobby)
##Summary statistics for control variables
datasummary((`Earnings Before Interest and Taxes (EBIT) ($M)` = ebit) + (`EBIT/Total Assets ($M)` = ebit_at) + (`Total Lobbying Per Year($M)` = total_lobby) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Control Variables',
align = 'lccccc',
fmt = 2,
output = 'latex')
##Exposure scores for top 10 industries
# select for relevant variables
df_ind <- df |>
# filter out empty bvd_sector
filter(bvd_sector != "") |>
# select variables we need
select(isin, year, bvd_sector, cc_expo_ew_y, op_expo_ew_y, rg_expo_ew_y, ph_expo_ew_y)
#calculate summary for exposure variables
#note - need to figure out how to order by largest to smallest and how to only include the top 10 by industry
overall <- datasummary((Industry = bvd_sector) ~ ccexp*(Mean + SD + N),
data = df2,
title = 'Overall Exposure by Industry',
fmt = 3)
#calculate summary for exposure variables
#note - need to figure out how to order by largest to smallest and how to only include the top 10 by industry
overall <- datasummary((Industry = bvd_sector) ~ cc_expo_ew_y*(Mean + SD + N),
data = df2,
title = 'Overall Exposure by Industry',
fmt = 3)
#calculate summary for exposure variables
#note - need to figure out how to order by largest to smallest and how to only include the top 10 by industry
overall <- datasummary((Industry = bvd_sector) ~ cc_expo_ew_y*(Mean + SD + N),
data = df_ind,
title = 'Overall Exposure by Industry',
fmt = 3)
overall
##Placebo analysis
#Load dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
#Normalize variables for interpretation
## continuous variables in regression models
df_wide_cont_vars <- c("cc_expo_ew_y", "cc_expo_ew_q", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y",
"ebit", "assets", "total_lobby")
setwd("C:/Users/fiona/Dropbox (Princeton)/BBH/BBH1")
pacman::p_load(data.table, tidyverse, modelsummary,
marginaleffects, kableExtra, fixest,
janitor, viridis, censReg)
rm(list=ls())
##Placebo analysis
#Load dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
rm(list=ls())
pacman::p_load(data.table, tidyverse, modelsummary,
marginaleffects, kableExtra, fixest,
janitor, viridis, censReg)
setwd("C:/Users/fiona/Dropbox (Princeton)/BBH/BBH1")
##Placebo analysis
#Load dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
#Normalize variables for interpretation
## continuous variables in regression models
df_wide_cont_vars <- c("cc_expo_ew_y", "cc_expo_ew_q", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y",
"ebit", "assets", "total_lobby")
## pull from main data
df_wide_cont <- df[, df_wide_cont_vars]
## pull from main data
df_wide_cont <- df[, ...df_wide_cont_vars]
head(df)
#Normalize variables for interpretation
## continuous variables in regression models
df_wide_cont_vars <- c("cc_expo_ew_y", "cc_expo_ew_q", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y",
"ebit", "at", "total_lobby")
## pull from main data
df_wide_cont <- df[, ...df_wide_cont_vars]
# load packages
pacman::p_load(data.table, tidyverse)
#Load data
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
## continuous variables in regression models
df_wide_cont_vars <- c("cc_expo_ew_y", "cc_expo_ew_q", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y",
"ebit", "at", "total_lobby")
## pull from main data
df_wide_cont <- df[, df_wide_cont_vars]
## pull from main data
df_wide_cont <- df[, ...df_wide_cont_vars]
## pull from main data
df_wide_cont <- df[, ..df_wide_cont_vars]
## rescale to standard normal
df_wide_cont <- scale(df_wide_cont)
## slot back into main df_wide
df[, df_wide_cont_vars] <- df_wide_cont
## slot back into main df_wide
df[, ..df_wide_cont_vars] <- df_wide_cont
##Placebo analysis
#Load dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
#Normalize variables for interpretation
## continuous variables in regression models
df_wide_cont_vars <- c("cc_expo_ew_y", "cc_expo_ew_q", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y",
"ebit", "at", "total_lobby")
## pull from main data
df_wide_cont <- df[, ..df_wide_cont_vars]
## rescale to standard normal
df_wide_cont <- scale(df_wide_cont)
## slot back into main df_wide
df[, df_wide_cont_vars] <- df_wide_cont
#Create new variable that is ebit/assets
df$ebit_at <- df$ebit / df$at
# Specify covariate names
cm <- c("op_expo_ew_y" = "Opportunity Exposure",
"rg_expo_ew_y" = "Regulatory Exposure",
"ph_expo_ew_y" = "Physical Exposure",
"cc_expo_ew_y" = "Overall Exposure",
"ebit" = "EBIT",
"ebit_at" = "EBIT/Assets",
"us_dummy" = "US HQ",
"total_lobby" = "Total Lobbying ($)"
)
############
##Identify placebo variables
# Specify columns to remove
columns_to_remove <- c("CAW", "ENV", "ENG", "FUE")
# Remove specified columns
df_placebo <- df %>%
select(-all_of(columns_to_remove))
start_index <- which(names(df) == "AGR")
end_index <- which(names(df) == "REL")
# Extract column names between "AGR" and "REL" into a character vector
selected_column_names <- names(df)[which(names(df) %in% c("AGR", "REL"))]
# Extract column names between "AGR" and "REL" into a character vector
selected_column_names <- names(df)[start_index:end_index]
# View the character vector of column names
print(selected_column_names)
############
##Identify placebo variables
# Specify columns to remove
columns_to_remove <- c("CAW", "ENV", "ENG", "FUE")
# Remove specified columns
df_placebo <- df |>
select(-all_of(columns_to_remove))
start_index <- which(names(df_placebo) == "AGR")
end_index <- which(names(df_placebo) == "REL")
# Extract column names between "AGR" and "REL" into a character vector
selected_column_names <- names(df_placebo)[start_index:end_index]
# View the character vector of column names
print(selected_column_names)
# Extract column names between "AGR" and "REL" into a character vector
dependent_vars <- names(df_placebo)[start_index:end_index]
# View the character vector of column names
print(dependent_vars)
# Initialize an empty list to store model results
results_list <- list()
for (dv in dependent_vars) { {
formula <- as.formula(paste(dv, "~ op_expo_ew_y + rg_expo_ew_y + ph_expo_ew_y + ebit + ebit_at + us_dummy + total_lobby| year + industry + industry_year")) # Include fixed effects in the formula
# Fit the feglm model
model <- feglm(formula, family = "binomial", data = df)
# Store the model results in the list
results_list[[paste(dv, sep = "_")]] <- summary(model)
}
}
# Access the results for each dependent variable and fixed effect combination
for (dv in dependent_vars) {
cat("Model results for", dv, ":\n")
print(results_list[[paste(dv, sep = "_")]])
}
rm(list=ls())
# Load packages
pacman::p_load(tidyverse, data.table, modelsummary)
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
setwd("~/Dropbox (Princeton)/BBH/BBH1/")
## Load data
#Lobbying analysis dataset
df <- fread("data/03_final/lobbying_df_wide_reduced.csv")
##Transform exposure variables *100 for easier interpretation
# Identify the subset of variables to be multiplied by 100
variables_to_multiply <- c("cc_expo_ew_y", "op_expo_ew_y", "rg_expo_ew_y", "ph_expo_ew_y")
# Multiply the selected variables by 100
df <- df |>
mutate(across(all_of(variables_to_multiply), ~ . * 100))
##Transform financial variables
#Create new variable that is ebit/assets
df$ebit_at <- df$ebit / df$at
# Identify the subset of variables to be divided by 1000000 to show in millions
variables_to_divide <- c("ebit", "ebit_at", "total_lobby")
# Divide the selected variables by 1000000
df <- df |>
mutate(across(all_of(variables_to_divide), ~ . / 1000000))
##Summary statistics for exposure variables
datasummary((Overall = cc_expo_ew_y) + (Opportunity = op_expo_ew_y) + (Regulatory = rg_expo_ew_y) + (Physical = ph_expo_ew_y) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Climate Change Exposure (Annual)',
align = 'lccccc',
fmt = 3,
output = 'latex')
##Summary statistics for control variables
datasummary((`Earnings Before Interest and Taxes (EBIT) ($M)` = ebit) + (`EBIT/Total Assets ($M)` = ebit_at) + (`Total Lobbying Per Year($M)` = total_lobby) ~ Mean + SD + P25 + P75 + N,
data = df,
title = 'Control Variables',
align = 'lccccc',
fmt = 2,
output = 'latex')
##Exposure scores for top 10 industries
# select for relevant variables
df_ind <- df |>
# filter out empty bvd_sector
filter(bvd_sector != "") |>
# select variables we need
select(isin, year, bvd_sector, cc_expo_ew_y, op_expo_ew_y, rg_expo_ew_y, ph_expo_ew_y)
#calculate summary for exposure variables
#note - need to figure out how to order by largest to smallest and how to only include the top 10 by industry
overall <- datasummary((Industry = bvd_sector) ~ cc_expo_ew_y*(Mean + SD + N),
data = df_ind,
title = 'Overall Exposure by Industry',
fmt = 3)
overall
opp <- datasummary((Industry = factor(bvd_sector, levels = Mean)) ~ opexpo*(Mean + SD + N),
data = df2,
title = 'Opportunity Exposure by Industry',
fmt = 3)
#calculate summary for exposure variables
#note - need to figure out how to order by largest to smallest and how to only include the top 10 by industry
overall <- datasummary((Industry = factor(bvd_sector, levels = Mean)) ~ cc_expo_ew_y*(Mean + SD + N),
data = df_ind,
title = 'Overall Exposure by Industry',
fmt = 3)
(Industry = factor(bvd_sector, levels = Mean)
)
(Industry = factor(bvd_sector, levels = Mean))
df$Industry = factor(df$bvd_sector, levels = Mean))
df$Industry = factor(df$bvd_sector, levels = Mean)
#calculate summary for exposure variables
#note - need to figure out how to order by largest to smallest and how to only include the top 10 by industry
overall <- datasummary((Industry = factor(reorder(bvd_sector, -Mean))) ~ cc_expo_ew_y*(Mean + SD + N),
data = df_ind,
title = 'Overall Exposure by Industry',
fmt = 3)
(df$Industry = factor(reorder(df$bvd_sector, -df$Mean)))
